[{"C:\\Users\\galsh\\Desktop\\law-geex\\src\\index.js":"1","C:\\Users\\galsh\\Desktop\\law-geex\\src\\App.js":"2","C:\\Users\\galsh\\Desktop\\law-geex\\src\\reportWebVitals.js":"3","C:\\Users\\galsh\\Desktop\\law-geex\\src\\components\\MovieDialog.js":"4","C:\\Users\\galsh\\Desktop\\law-geex\\src\\components\\MovieCard.js":"5","C:\\Users\\galsh\\Desktop\\law-geex\\src\\components\\SearchCard.js":"6"},{"size":500,"mtime":1633616972000,"results":"7","hashOfConfig":"8"},{"size":5190,"mtime":1634258342000,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1633616972000,"results":"10","hashOfConfig":"8"},{"size":4307,"mtime":1634258742000,"results":"11","hashOfConfig":"8"},{"size":2341,"mtime":1634257688000,"results":"12","hashOfConfig":"8"},{"size":3342,"mtime":1634257806000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ou7fip",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\galsh\\Desktop\\law-geex\\src\\index.js",[],"C:\\Users\\galsh\\Desktop\\law-geex\\src\\App.js",["28"],"import './App.css';\nimport { useEffect, useState } from 'react'\nimport { CircularProgress } from '@material-ui/core'\nimport MovieDialog from '../src/components/MovieDialog';\nimport MovieCard from '../src/components/MovieCard';\nimport SearchCard from './components/SearchCard';\nimport styled from 'styled-components'\n\nfunction App() {\n\n  const [moviesList, setMoviesList] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [searchPage, setSearchPage] = useState(1);\n  const [searchYear, setSearchYear] = useState();\n  const [loadingPage, setLoadingPage] = useState(false);\n  const [searchDisclaimer, setSearchDisclaimer] = useState('');\n  const [currentMovieData, setCurrentMovieData] = useState({});\n  const [moviePopup, setMoviePopup] = useState(false);\n  let timeout = null;\n\n  useEffect(() => {\n    // detect scroll to end of page\n    window.onscroll = () => {\n      if (!loadingPage && inputValue) {\n        const scrollableDivHeight = document.getElementById('scrollableDiv').clientHeight;\n        if (!loadingPage && document.documentElement.scrollTop > (scrollableDivHeight - window.innerHeight - 500)) {\n          console.log(`need to load page no => ${searchPage + 1}`);\n          setLoadingPage(true);\n          setSearchPage(searchPage + 1);\n          searchMoviesByInputValue(inputValue, searchPage + 1);\n        }\n      }\n    }\n  }, [loadingPage, searchPage, inputValue])\n\n  const searchMoviesByInputValue = async (searchInput, searchPage) => {\n    console.log(`inputValue => ${searchInput}\\nsearchPage => ${searchPage}\\nsearchYear => ${searchYear}\\nurl => http://www.omdbapi.com/?apikey=a61b9e49&s=${inputValue}&page=${searchPage}&y=${searchYear}`);\n    setLoadingPage(true);\n    let url = `http://www.omdbapi.com/?apikey=a61b9e49&s=${searchInput}&page=${searchPage}&y=${searchYear}`;\n    await fetch(url)\n    .then(response => response.json())\n    .then(results => {\n      if (results.Response && results.Search) {\n        if (searchPage === 1) {\n          setMoviesList(results.Search);\n          setSearchPage(1);\n        }\n        else setMoviesList([ ...moviesList, ...results.Search ]);\n        setSearchDisclaimer(`Displaying ${results.totalResults || ''} total results for \"${searchInput}\"`);\n        setLoadingPage(false);\n      }\n      else if (results.Error && searchPage === 1) {\n        setSearchDisclaimer(results.Error);\n        setMoviesList([]);\n        setLoadingPage(false);\n      }\n    })\n    .catch(() => alert('error'))\n  }\n\n  const handleInputChange = (searchInput) => {\n    console.log(`handleInputChange => searchInput: ${searchInput}`)\n    setInputValue(searchInput);\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      searchMoviesByInputValue(searchInput.trim(), 1);\n    }, 500);\n  };\n\n  const getMovieDataById = async (movieId) => {\n    let url = `http://www.omdbapi.com/?apikey=a61b9e49&i=${movieId}&plot=full`;\n    await fetch(url)\n    .then(response => response.json())\n    .then(result => {\n      if (result.Response) {\n        setMoviePopup(true);\n        setCurrentMovieData(result);\n      }\n      else if (result.Error) {\n        setSearchDisclaimer(result.Error);\n      }\n    })\n    .catch(() => alert('error'))\n  }\n\n\n  return (\n    <AppStyle>\n\n      <header className=\"App-header\">\n        <p style={{width: '95%', textAlign: 'left'}}>\n          LawGeex Exercise\n        </p>\n      </header>\n\n      <div className=\"App-content\" id='scrollableDiv'>\n        <SearchCard searchInputValue={inputValue}\n                    onInputChange={(e) => handleInputChange(e.target.value)}\n                    onKeyPress={(e) => {if (e.key === 'Enter') searchMoviesByInputValue(inputValue, 1)}}\n                    yearInputValue={searchYear}\n                    onYearChange={(e) => { setSearchYear(e.target.value); alert(`Change Year => ${e.target.value}`); }}\n                    onButtonClick={() => searchMoviesByInputValue(inputValue, 1)}\n        />\n        {searchDisclaimer && <p className='search-disclaimer'>{searchDisclaimer}</p>}\n        {moviesList.map(movie =>\n          <MovieCard movieData={movie} onMovieClick={() => getMovieDataById(movie.imdbID)} />\n        )}\n        {loadingPage && <CircularProgress style={{margin: '0 auto'}} />}\n      </div>\n\n      {moviePopup &&\n        <MovieDialog\n          openPopup={moviePopup}\n          closePopup={() => setMoviePopup(false)}\n          movieData={currentMovieData}\n        />\n      }\n    </AppStyle>\n  );\n}\nconst AppStyle = styled.div`\n  text-align: center;\n\n  .App-header {\n    background-color: #282c34;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: calc(10px + 2vmin);\n    color: white;\n  }\n\n  .App-content {\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    height: auto;\n    background-color: #fff;\n    width: 60%;\n    padding: 2% 20%;\n    margin: 0 auto;\n    @media only screen and (max-width: 1024px) {\n      width: 92%;\n      padding: 2% 3%;\n    }\n  }\n\n  .search-disclaimer {\n    width: 94%;\n    text-align: left;\n    @media only screen and (max-width: 1024px) {\n      font-size: 13px;\n      text-align: center;\n    }\n  }\n\n`\n\nexport default App;\n","C:\\Users\\galsh\\Desktop\\law-geex\\src\\reportWebVitals.js",[],"C:\\Users\\galsh\\Desktop\\law-geex\\src\\components\\MovieDialog.js",["29"],"import React from 'react'\nimport { Dialog, Chip } from '@material-ui/core'\nimport styled from 'styled-components'\nimport imdbLogo from '../logo-imdb.png'\n\nconst MovieDialog = (props) => {\n\n    const { openPopup, closePopup, movieData } = props;\n\n    const dialogStyle = {\n        width: '70%',\n        margin: 'auto',\n        '@media (max-width: 1024px)' : {\n            width: '100%',\n        }\n    }\n\n    return <>\n        <Dialog\n            open={openPopup}\n            onClose={closePopup}\n            maxWidth={'100px'}\n            className='DialogStyle'\n            style={{width: '70%', margin: 'auto'}}\n            role={'dialog'}\n        >\n            <WrapperStyle>\n                <button className='closeBtn' onClick={closePopup}>&#10005;</button>\n                \n                <div className='moviePoster'>\n                    <img alt='poster' src={movieData.Poster} />\n                </div>\n\n                <div className='movieContent'>\n                    <h2>{movieData.Title}</h2>\n                    <h5>\n                        <span>{movieData.Year}</span>\n                        <span>&#9201; {movieData.Runtime}</span>\n                        {movieData.Awards !== 'N/A' && <span>&#127942; {movieData.Awards}</span>}\n                    </h5>\n                    <div className='lineContent'>\n                        <div className='chipsWrapper'>\n                            {movieData.Genre && movieData.Genre.split(',').map((genre, index) => (\n                                <Chip key={index} label={genre} size={'medium'} variant={'outline'} className='chipStyle' />\n                            ))}\n                        </div>\n                        <div className='ratingWrapper'>\n                            <div>\n                                <span className='likeIcon'>&#128077;</span>\n                                <span className='rateText'>{movieData.Metascore}%</span>\n                            </div>\n                            <div>\n                                <img alt='logo' src={imdbLogo} className='imdbLogo' />\n                                <span className='rateText'>{movieData.imdbRating}/10</span>\n                            </div>\n                        </div>\n                    </div>\n                    <p>{movieData.Plot}</p>\n                    <p><strong>Actors: </strong> {movieData.Actors}</p>\n                    <p><strong>Director: </strong> {movieData.Director}</p>\n                    <p><strong>Writer: </strong> {movieData.Writer}</p>\n                </div>\n            </WrapperStyle>\n        </Dialog>\n    </>\n}\n\nconst WrapperStyle = styled.div`\n    width: 80%;\n    padding: 6% 10%;\n    display: flex;\n    flex-direction: row;\n\n    .closeBtn {\n        font-size: 20px;\n        border: none;\n        position: absolute;\n        background-color: white;\n        cursor: pointer;\n        left: 30px;\n        top: 30px;\n    }\n\n    .moviePoster {\n        width: 30%;\n        img {\n            max-width: 100%;\n            max-height: 100%;\n            height: auto;\n        }\n    }\n\n    .movieContent {\n        width: 70%;\n        padding-left: 30px;\n        h2 {\n            margin-top: 0;\n        }\n        h5 > span {\n            margin-right: 5px;\n        }\n        .lineContent {\n            display: flex;\n            flex-direction: row;\n        }\n        .chipsWrapper {\n            width: 65%;\n            .chipStyle {\n                margin-right: 10px;\n                margin-left: -2px;\n            }\n        }\n        .ratingWrapper {\n            width: 30%;\n            display: flex;\n            flex-direction: row;\n            div {\n                width: 50%;\n                display: flex;\n                flex-direction: row;\n            }\n            .likeIcon {\n                height: 25px;\n                font-size: 22px;\n                text-align: center;\n                line-height: 25px;\n            }\n            .imdbLogo {\n                max-height: 25px;\n                max-width: 80%;\n                width: auto;\n                height: auto;\n            }\n            .rateText {\n                font-size: 14px;\n                text-align: center;\n                line-height: 25px;\n                margin-left: 5px;\n            }\n        }\n    }\n\n`\n\nexport default MovieDialog;","C:\\Users\\galsh\\Desktop\\law-geex\\src\\components\\MovieCard.js",[],"C:\\Users\\galsh\\Desktop\\law-geex\\src\\components\\SearchCard.js",[],{"ruleId":"30","severity":1,"message":"31","line":34,"column":6,"nodeType":"32","endLine":34,"endColumn":43,"suggestions":"33"},{"ruleId":"34","severity":1,"message":"35","line":10,"column":11,"nodeType":"36","messageId":"37","endLine":10,"endColumn":22},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchMoviesByInputValue'. Either include it or remove the dependency array.","ArrayExpression",["38"],"no-unused-vars","'dialogStyle' is assigned a value but never used.","Identifier","unusedVar",{"desc":"39","fix":"40"},"Update the dependencies array to be: [loadingPage, searchPage, inputValue, searchMoviesByInputValue]",{"range":"41","text":"42"},[1371,1408],"[loadingPage, searchPage, inputValue, searchMoviesByInputValue]"]