{"version":3,"sources":["logo-imdb.png","components/MovieDialog.js","components/MovieCard.js","components/SearchCard.js","App.js","reportWebVitals.js","index.js"],"names":["WrapperStyle","styled","div","MovieDialog","props","openPopup","closePopup","movieData","Dialog","open","onClose","maxWidth","className","style","width","margin","role","onClick","alt","src","Poster","Title","Year","Runtime","Awards","Genre","split","map","genre","index","Chip","label","size","variant","Metascore","imdbLogo","imdbRating","Plot","Actors","Director","Writer","MovieCardStyle","MovieCard","onMovieClick","imdbID","Type","href","target","rel","SearchCardStyle","SearchCard","searchInputValue","onInputChange","onKeyPress","yearInputValue","onYearChange","onButtonClick","useState","yearsList","setYearsList","useEffect","currentYear","Date","getFullYear","initYearsList","value","text","console","log","i","push","TextField","onChange","fullWidth","InputProps","type","endAdornment","InputAdornment","position","FormControl","InputLabel","id","Select","labelId","year","MenuItem","Button","color","AppStyle","App","moviesList","setMoviesList","inputValue","setInputValue","searchPage","setSearchPage","searchYear","setSearchYear","loadingPage","setLoadingPage","searchDisclaimer","setSearchDisclaimer","currentMovieData","setCurrentMovieData","moviePopup","setMoviePopup","timeout","window","onscroll","scrollableDivHeight","document","getElementById","clientHeight","documentElement","scrollTop","innerHeight","searchMoviesByInputValue","searchInput","a","url","fetch","then","response","json","results","Response","Search","totalResults","Error","catch","alert","getMovieDataById","movieId","result","textAlign","e","clearTimeout","setTimeout","trim","key","movie","CircularProgress","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8a7d78f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-imdb.b3b5606f.png\";","import React from 'react'\nimport { Dialog, Chip } from '@material-ui/core'\nimport styled from 'styled-components'\nimport imdbLogo from '../logo-imdb.png'\n\nconst MovieDialog = (props) => {\n\n    const { openPopup, closePopup, movieData } = props;\n\n    const dialogStyle = {\n        width: '70%',\n        margin: 'auto',\n        '@media (max-width: 1024px)' : {\n            width: '100%',\n        }\n    }\n\n    return <>\n        <Dialog\n            open={openPopup}\n            onClose={closePopup}\n            maxWidth={'100px'}\n            className='DialogStyle'\n            style={{width: '70%', margin: 'auto'}}\n            role={'dialog'}\n        >\n            <WrapperStyle>\n                <button className='closeBtn' onClick={closePopup}>&#10005;</button>\n                \n                <div className='moviePoster'>\n                    <img alt='poster' src={movieData.Poster} />\n                </div>\n\n                <div className='movieContent'>\n                    <h2>{movieData.Title}</h2>\n                    <h5>\n                        <span>{movieData.Year}</span>\n                        <span>&#9201; {movieData.Runtime}</span>\n                        {movieData.Awards !== 'N/A' && <span>&#127942; {movieData.Awards}</span>}\n                    </h5>\n                    <div className='lineContent'>\n                        <div className='chipsWrapper'>\n                            {movieData.Genre && movieData.Genre.split(',').map((genre, index) => (\n                                <Chip key={index} label={genre} size={'medium'} variant={'outline'} className='chipStyle' />\n                            ))}\n                        </div>\n                        <div className='ratingWrapper'>\n                            <div>\n                                <span className='likeIcon'>&#128077;</span>\n                                <span className='rateText'>{movieData.Metascore}%</span>\n                            </div>\n                            <div>\n                                <img alt='logo' src={imdbLogo} className='imdbLogo' />\n                                <span className='rateText'>{movieData.imdbRating}/10</span>\n                            </div>\n                        </div>\n                    </div>\n                    <p>{movieData.Plot}</p>\n                    <p><strong>Actors: </strong> {movieData.Actors}</p>\n                    <p><strong>Director: </strong> {movieData.Director}</p>\n                    <p><strong>Writer: </strong> {movieData.Writer}</p>\n                </div>\n            </WrapperStyle>\n        </Dialog>\n    </>\n}\n\nconst WrapperStyle = styled.div`\n    width: 80%;\n    padding: 6% 10%;\n    display: flex;\n    flex-direction: row;\n\n    .closeBtn {\n        font-size: 20px;\n        border: none;\n        position: absolute;\n        background-color: white;\n        cursor: pointer;\n        left: 30px;\n        top: 30px;\n    }\n\n    .moviePoster {\n        width: 30%;\n        img {\n            max-width: 100%;\n            max-height: 100%;\n            height: auto;\n        }\n    }\n\n    .movieContent {\n        width: 70%;\n        padding-left: 30px;\n        h2 {\n            margin-top: 0;\n        }\n        h5 > span {\n            margin-right: 5px;\n        }\n        .lineContent {\n            display: flex;\n            flex-direction: row;\n        }\n        .chipsWrapper {\n            width: 65%;\n            .chipStyle {\n                margin-right: 10px;\n                margin-left: -2px;\n            }\n        }\n        .ratingWrapper {\n            width: 30%;\n            display: flex;\n            flex-direction: row;\n            div {\n                width: 50%;\n                display: flex;\n                flex-direction: row;\n            }\n            .likeIcon {\n                height: 25px;\n                font-size: 22px;\n                text-align: center;\n                line-height: 25px;\n            }\n            .imdbLogo {\n                max-height: 25px;\n                max-width: 80%;\n                width: auto;\n                height: auto;\n            }\n            .rateText {\n                font-size: 14px;\n                text-align: center;\n                line-height: 25px;\n                margin-left: 5px;\n            }\n        }\n    }\n\n`\n\nexport default MovieDialog;","import React from 'react'\nimport styled from 'styled-components'\n\nconst MovieCard = (props) => {\n\n    const { movieData, onMovieClick } = props;\n\n    return <>\n        <MovieCardStyle key={movieData.imdbID} onClick={onMovieClick}>\n\n            <div className='moviePoster'>\n                {movieData.Poster !== 'N/A' ? \n                    <img src={movieData.Poster} alt={`${movieData.Title} poster`} />\n                    : \n                    <div className='defaultImg'>\n                        <p>Poster is Not Available</p>\n                    </div>  \n                }\n            </div>\n            \n            <div className='movieContent'>\n                <h3>{movieData.Title}</h3>\n                <h4>Released Date: {movieData.Year}</h4>\n                <h4>IMDB No: {movieData.imdbID}</h4>\n                <h4>Type: {movieData.Type}</h4>\n                <a href={`https://www.imdb.com/title/${movieData.imdbID}`} target='_blank' rel='noreferrer'>IMDb</a>\n            </div>\n        </MovieCardStyle>\n    </>\n}\n\nconst MovieCardStyle = styled.div`\n    display: flex;\n    width: 94%;\n    padding: 3%;\n    margin: 15px auto;\n    box-shadow: 0 2px 10px 0 #d7d3ff;\n    cursor: pointer;\n    @media only screen and (max-width: 1024px) {\n        margin: 5px auto;\n    }\n\n    .moviePoster {\n        width: 18%;\n        margin-left: 2%;\n        @media only screen and (max-width: 1024px) {\n            width: 25%;\n            margin-left: 2%;\n        }\n        img {\n            max-width: 100%;\n            max-height: 100%;\n            height: auto;\n        }\n        .defaultImg {\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            background-color: #efefef;\n            p {\n                color: gray;\n                line-height: 25px;\n            }\n        }\n    }\n\n    .movieContent {\n        width: 76%;\n        margin-left: 3%;\n        padding-left: 15px;\n        text-align: left;\n        color: black;\n        @media only screen and (max-width: 1024px) {\n            h3 {\n                margin: 0px;\n                font-size: 15px;\n            }\n            h4 {\n                margin: 6px 0;\n                font-size: 13px;\n            }\n            a {\n                font-size: 13px;\n            }\n        }\n    }\n`\n\nexport default MovieCard;","import React from 'react'\nimport { useEffect, useState } from 'react'\nimport { TextField, FormControl, Select, InputLabel, MenuItem, InputAdornment, Button } from '@material-ui/core'\nimport styled from 'styled-components'\n\nconst SearchCard = (props) => {\n\n    const { \n        searchInputValue,\n        onInputChange, \n        onKeyPress,\n        yearInputValue,\n        onYearChange,\n        onButtonClick\n    } = props;\n\n    const [yearsList, setYearsList] = useState([]);\n\n    useEffect(() => {\n        // init years list\n        const startYear = 1900;\n        const currentYear = new Date().getFullYear();\n        const initYearsList = [{value: null, text: 'All'}]\n        console.log(`currentYear => ${currentYear}`)\n        for (let i=currentYear; i>=startYear; i--) {\n            initYearsList.push({value: i, text: i})\n        }\n        setYearsList(initYearsList);\n    }, [])\n\n    return <>\n        <SearchCardStyle>\n\n            <TextField\n                label='Search'\n                value={searchInputValue}\n                onChange={onInputChange}\n                onKeyPress={onKeyPress}\n                fullWidth={true}\n                className='searchInput'\n                // helperText={searchDisclaimer}\n                // InputProps={{disableUnderline: true}}\n                InputProps={{\n                    type: 'search',\n                    endAdornment: (\n                        <InputAdornment position='start'>\n                            {!searchInputValue && <span className='searchImg'>&#x2315;</span>}\n                        </InputAdornment>\n                    )\n                }}\n            />     \n\n            <FormControl fullWidth className='selectInput'>\n                <InputLabel id='demo-select-year-label'>Year</InputLabel>\n                <Select\n                    labelId='demo-select-year-label'\n                    value={yearInputValue}\n                    label='Year'\n                    onChange={onYearChange}\n                >\n                    {yearsList.map(year => \n                        <MenuItem value={year.value} key={year.text}>{year.text}</MenuItem>\n                    )}\n                </Select>\n            </FormControl>\n\n            <Button className='searchButton' onClick={onButtonClick} variant='contained' color='primary'>\n                Search\n            </Button>\n\n        </SearchCardStyle>\n    </>\n}\n\nconst SearchCardStyle = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 94%;\n    min-height: 40px;\n    margin: 30px auto;\n    padding: 10px 3% 18px 3%;\n    border-radius: 25px;\n    box-shadow: 0 2px 10px 0 #d7d3ff;\n    @media only screen and (max-width: 1024px) {\n        margin: 30px auto 0;\n    }\n\n    .searchInput {\n        width: 50%;\n        padding-right: 20px;\n        .searchImg {\n            position: absolute;\n            right: 0px;\n            font-size: 32px;\n            color: #684eed;\n        }\n    }\n\n    .selectInput {\n        width: 30%;\n        padding-right: 20px;\n    }\n\n    .searchButton {\n        width: 25%;\n        height: 40px;\n        background-color: #684eed;\n        border-radius: 20px;\n        margin: 10px auto;\n        @media only screen and (max-width: 1024px) {\n            height: 30px;\n            margin-top: 15px;\n            font-size: 13px\n        }\n    }\n`\n\nexport default SearchCard;","import './App.css';\nimport { useEffect, useState } from 'react'\nimport { CircularProgress } from '@material-ui/core'\nimport MovieDialog from '../src/components/MovieDialog';\nimport MovieCard from '../src/components/MovieCard';\nimport SearchCard from './components/SearchCard';\nimport styled from 'styled-components'\n\nfunction App() {\n\n  const [moviesList, setMoviesList] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [searchPage, setSearchPage] = useState(1);\n  const [searchYear, setSearchYear] = useState();\n  const [loadingPage, setLoadingPage] = useState(false);\n  const [searchDisclaimer, setSearchDisclaimer] = useState('');\n  const [currentMovieData, setCurrentMovieData] = useState({});\n  const [moviePopup, setMoviePopup] = useState(false);\n  let timeout = null;\n\n  useEffect(() => {\n    // detect scroll to end of page\n    window.onscroll = () => {\n      if (!loadingPage && inputValue) {\n        const scrollableDivHeight = document.getElementById('scrollableDiv').clientHeight;\n        if (!loadingPage && document.documentElement.scrollTop > (scrollableDivHeight - window.innerHeight - 500)) {\n          console.log(`need to load page no => ${searchPage + 1}`);\n          setLoadingPage(true);\n          setSearchPage(searchPage + 1);\n          searchMoviesByInputValue(inputValue, searchPage + 1);\n        }\n      }\n    }\n  }, [loadingPage, searchPage, inputValue])\n\n  const searchMoviesByInputValue = async (searchInput, searchPage) => {\n    console.log(`inputValue => ${searchInput}\\nsearchPage => ${searchPage}\\nsearchYear => ${searchYear}\\nurl => http://www.omdbapi.com/?apikey=a61b9e49&s=${inputValue}&page=${searchPage}&y=${searchYear}`);\n    setLoadingPage(true);\n    let url = `http://www.omdbapi.com/?apikey=a61b9e49&s=${searchInput}&page=${searchPage}&y=${searchYear}`;\n    await fetch(url)\n    .then(response => response.json())\n    .then(results => {\n      if (results.Response && results.Search) {\n        if (searchPage === 1) {\n          setMoviesList(results.Search);\n          setSearchPage(1);\n        }\n        else setMoviesList([ ...moviesList, ...results.Search ]);\n        setSearchDisclaimer(`Displaying ${results.totalResults || ''} total results for \"${searchInput}\"`);\n        setLoadingPage(false);\n      }\n      else if (results.Error && searchPage === 1) {\n        setSearchDisclaimer(results.Error);\n        setMoviesList([]);\n        setLoadingPage(false);\n      }\n    })\n    .catch(() => alert('error'))\n  }\n\n  const handleInputChange = (searchInput) => {\n    console.log(`handleInputChange => searchInput: ${searchInput}`)\n    setInputValue(searchInput);\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      searchMoviesByInputValue(searchInput.trim(), 1);\n    }, 500);\n  };\n\n  const getMovieDataById = async (movieId) => {\n    let url = `http://www.omdbapi.com/?apikey=a61b9e49&i=${movieId}&plot=full`;\n    await fetch(url)\n    .then(response => response.json())\n    .then(result => {\n      if (result.Response) {\n        setMoviePopup(true);\n        setCurrentMovieData(result);\n      }\n      else if (result.Error) {\n        setSearchDisclaimer(result.Error);\n      }\n    })\n    .catch(() => alert('error'))\n  }\n\n\n  return (\n    <AppStyle>\n\n      <header className=\"App-header\">\n        <p style={{width: '95%', textAlign: 'left'}}>\n          LawGeex Exercise\n        </p>\n      </header>\n\n      <div className=\"App-content\" id='scrollableDiv'>\n        <SearchCard searchInputValue={inputValue}\n                    onInputChange={(e) => handleInputChange(e.target.value)}\n                    onKeyPress={(e) => {if (e.key === 'Enter') searchMoviesByInputValue(inputValue, 1)}}\n                    yearInputValue={searchYear}\n                    onYearChange={(e) => { setSearchYear(e.target.value); alert(`Change Year => ${e.target.value}`); }}\n                    onButtonClick={() => searchMoviesByInputValue(inputValue, 1)}\n        />\n        {searchDisclaimer && <p className='search-disclaimer'>{searchDisclaimer}</p>}\n        {moviesList.map(movie =>\n          <MovieCard movieData={movie} onMovieClick={() => getMovieDataById(movie.imdbID)} />\n        )}\n        {loadingPage && <CircularProgress style={{margin: '0 auto'}} />}\n      </div>\n\n      {moviePopup &&\n        <MovieDialog\n          openPopup={moviePopup}\n          closePopup={() => setMoviePopup(false)}\n          movieData={currentMovieData}\n        />\n      }\n    </AppStyle>\n  );\n}\nconst AppStyle = styled.div`\n  text-align: center;\n\n  .App-header {\n    background-color: #282c34;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: calc(10px + 2vmin);\n    color: white;\n  }\n\n  .App-content {\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    height: auto;\n    background-color: #fff;\n    width: 60%;\n    padding: 2% 20%;\n    margin: 0 auto;\n    @media only screen and (max-width: 1024px) {\n      width: 92%;\n      padding: 2% 3%;\n    }\n  }\n\n  .search-disclaimer {\n    width: 94%;\n    text-align: left;\n    @media only screen and (max-width: 1024px) {\n      font-size: 13px;\n      text-align: center;\n    }\n  }\n\n`\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}